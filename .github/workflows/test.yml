name: Test

concurrency:
  group: "test-ui-${{ github.ref }}"
  cancel-in-progress: true

on:
  push:
    branches: [main]
    paths:
      - "packages/ui/**"
      - "packages/fetch/**"
      - ".github/workflows/test.yml"
  pull_request:
    paths:
      - "packages/ui/**"
      - "packages/fetch/**"
      - ".github/workflows/test.yml"
jobs:
  test:
    timeout-minutes: 20
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v2
        with:
          node-version: "16.x"

      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 7.9.5

      - uses: valu-digital/slack-action@master
        with:
          token: ${{ secrets.SLACK_ACCESS_TOKEN }}
          channel: "${{ secrets.SLACK_CHANNEL }}"

      - name: Set pnpm store path
        run: echo "PNPM_STORE_PATH=$(pnpm store path)" >> $GITHUB_ENV

      - name: Cache pnpm modules
        uses: actions/cache@v2
        with:
          path: ${{ env.PNPM_STORE_PATH }}
          key: pnpm-test-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-test-${{ runner.os }}-

      - name: Cache playwright browsers
        uses: actions/cache@v2
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            playwright-${{ runner.os }}-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --filter @findkit/root --filter @findkit/ui --filter @findkit/fetch

      - name: Build all
        run: |
          set -eu
          ./node_modules/.bin/turbo run build --filter @findkit/ui

          cd packages/ui
          gzip esm/*.js
          echo 'The bundle sizes are now:' > /tmp/sizes
          echo '```' >> /tmp/sizes
          ls -lh esm/*.js.gz >> /tmp/sizes
          echo '```' >> /tmp/sizes
          echo 'The `index.js` is the loader code which should be as small as possible.' >> /tmp/sizes
          gunzip esm/*.gz

      - name: Comment bundle sizes on commit
        uses: actions/github-script@v6
        if: ${{ github.event_name != 'pull_request'  }}
        with:
          script: |
            const fs = require('fs');
            const sizes = fs.readFileSync('/tmp/sizes', 'utf8');
            github.rest.repos.createCommitComment({
              commit_sha: context.sha,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: sizes
            })

      - name: Run @findkit/fetch
        run: cd packages/fetch && pnpm run test

      - name: Run @findkit/ui linting and unit tests
        run: cd packages/ui && pnpm run test

      - name: Install Playwright Browsers
        run: cd packages/ui && ./node_modules/.bin/playwright install --with-deps

      - name: Run Playwright tests
        run: |
          set -eu

          cd packages/ui

          # Sanity check
          ./node_modules/.bin/findkit search -t po8GK3G0r valu

          pnpm run build-e2e
          pnpm run playwright-test

      - name: Run Playwright visual tests
        run: |
          set -eu
          set -x

          cd packages/ui

          pnpm run playwright-visual || {
            echo VISUAL_FAIL=1 >> $GITHUB_ENV
          }

      - name: Comment bundle sizes on PR
        uses: actions/github-script@v6
        if: ${{ github.event_name == 'pull_request' && env.VISUAL_FAIL != '1' }}
        with:
          script: |
            const fs = require('fs');
            const sizes = fs.readFileSync('/tmp/sizes', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: sizes
            })

      - name: Update snapshots and notify
        if: ${{ github.event_name == 'pull_request' && env.VISUAL_FAIL == '1' }}
        run: |
          set -x
          set -eu
          cd packages/ui

          pr=${{ github.event.number }}
          link="https://github.com/${GITHUB_REPOSITORY}/pull/${pr}"

          git config user.email "action@github.com"
          git config user.name "${{ github.actor }}"

          pnpm run playwright-update
          git status

          if [ "$(git status --porcelain e2e-visual)" = "" ]; then
            exit 0
          fi

          git add e2e-visual
          git commit -m "Update e2e snapshots [skip actions]"
          git push origin "HEAD:$GITHUB_HEAD_REF"
          echo "DIFF_SHA=$(git rev-parse HEAD)" >> $GITHUB_ENV

          slack-message '<!channel>'"Hey ${{ github.actor }} PR <$link|#$pr> failed visual e2e tests. See the bot comment for instructions."

      - name: Comment about snapshot changes
        uses: actions/github-script@v6
        if: ${{ github.event_name == 'pull_request' && env.VISUAL_FAIL == '1' }}
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Hey @${{ github.actor }}! The visual tests failed on ${{ github.event.pull_request.head.sha }}. I updated the snaphots to this PR and added the `VISUAL FAIL` label. See the changes at ${{ env.DIFF_SHA }}. Accept the changes by removing the label or try again by force pushing. Also remember to run tests locally to update the macOS snapshots!'
            })

            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['VISUAL FAIL']
            })

      - name: Fail suite if e2e failed
        if: ${{ env.VISUAL_FAIL == '1' }}
        run: exit 1

      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: playwright-report
          path: packages/ui/playwright-report/
          retention-days: 30
