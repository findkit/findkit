name: Test

concurrency:
  group: "test-ui-${{ github.ref }}"
  cancel-in-progress: true

on:
  push:
    branches: [main]
    paths:
      - "packages/ui/**"
      - "packages/fetch/**"
      - ".github/workflows/test.yml"
  pull_request:
    paths:
      - "packages/ui/**"
      - "packages/fetch/**"
      - ".github/workflows/test.yml"
jobs:
  unit-test:
    timeout-minutes: 20
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/setup-action

      - name: Run @findkit/fetch tests
        run: cd packages/fetch && pnpm run test

      - name: Run @findkit/ui linting and unit tests
        run: cd packages/ui && pnpm run test


  playwright-test:
    timeout-minutes: 20
    runs-on: ubuntu-latest
    strategy:
      matrix:
        shard: [1, 2, 3]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/setup-action

      - name: Install Playwright Browsers
        run: cd packages/ui && ./node_modules/.bin/playwright install --with-deps

      - name: Run Playwright tests
        run: |
          set -eu

          cd packages/ui

          # Sanity check
          ./node_modules/.bin/findkit search -t po8GK3G0r valu

          pnpm run build-test-app
          pnpm run playwright-test --shard=${{ matrix.shard }}/${{ strategy.job-total }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report-${{ matrix.shard }}
          path: packages/ui/playwright-report/
          retention-days: 2

  playwright-test-macos:
    timeout-minutes: 20
    runs-on: macos-latest
    strategy:
      matrix:
        shard: [1, 2]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/setup-action

      - name: Install Playwright Browsers
        run: cd packages/ui && ./node_modules/.bin/playwright install --with-deps

      - name: Run Playwright tests
        run: |
          set -eu

          cd packages/ui

          # Sanity check
          ./node_modules/.bin/findkit search -t po8GK3G0r valu

          pnpm run build-test-app
          pnpm run playwright-test --shard=${{ matrix.shard }}/${{ strategy.job-total }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report-macos-${{ matrix.shard }}
          path: packages/ui/playwright-report/
          retention-days: 2

  playwright-visual:
    timeout-minutes: 20
    runs-on: ubuntu-latest
    strategy:
      matrix:
        shard: [1, 2]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/setup-action

      - name: Install Playwright Browsers
        run: cd packages/ui && ./node_modules/.bin/playwright install --with-deps

      - name: Run Playwright visual tests
        run: |
          set -eu
          set -x

          cd packages/ui

          # Sanity check
          ./node_modules/.bin/findkit search -t po8GK3G0r valu

          pnpm run build-test-app
          pnpm run playwright-visual --shard=${{ matrix.shard }}/${{ strategy.job-total }}

      - name: Remove visual fail label if success
        uses: actions/github-script@v6
        if: ${{ github.event_name == 'pull_request' }}
        with:
          script: |
            const labels = await github.rest.issues.listLabelsOnIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });

            const visualFailLabel = labels.data.find(label => label.name === 'VISUAL FAIL');

            if (visualFailLabel) {
              await github.rest.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                name: 'VISUAL FAIL'
              }).catch(error => {
                if (!String(error).includes("Label does not exist")) {
                  throw error;
                }
              })
            }

  playwright-visual-update:
    if: failure() && github.event_name == 'pull_request'
    needs: [playwright-visual]
    timeout-minutes: 20
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          # gonna commit and push, so need all history
          fetch-depth: 0

      - uses: ./.github/setup-action

      - name: Install Playwright Browsers
        run: cd packages/ui && ./node_modules/.bin/playwright install --with-deps

      - name: Update snapshots
        run: |
          set -x
          set -eu
          cd packages/ui

          pr=${{ github.event.number }}
          link="https://github.com/${GITHUB_REPOSITORY}/pull/${pr}"

          git config user.email "action@github.com"
          git config user.name "${{ github.actor }}"

          pnpm run build-test-app
          pnpm run playwright-update

      - name: Commit snapshots
        run: |
          set -x
          set -eu
          cd packages/ui

          git status

          if [ "$(git status --porcelain e2e-visual)" = "" ]; then
            exit 0
          fi

          git add e2e-visual
          git commit -m "Update e2e snapshots [skip actions]"
          git push origin "HEAD:$GITHUB_HEAD_REF"
          echo "DIFF_SHA=$(git rev-parse HEAD)" >> $GITHUB_ENV

      - name: Comment about snapshot changes
        uses: actions/github-script@v6
        if: ${{ env.DIFF_SHA != '' }}
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Hey @${{ github.actor }}! The visual tests failed on ${{ github.event.pull_request.head.sha }}. I updated the snaphots to this PR and added the `VISUAL FAIL` label. See the changes at ${{ env.DIFF_SHA }}. Accept the changes by removing the label or try again by force pushing. Also remember to run tests locally to update the macOS snapshots!'
            })

            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['VISUAL FAIL']
            })
